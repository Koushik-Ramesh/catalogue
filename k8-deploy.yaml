# Creates Catalogue Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  labels:
    app: catalogue
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable : 20
  selector:
    matchLabels:
      app: catalogue
  template:
    metadata:
      labels:
        app: catalogue
    spec:
      containers:
      - name: catalogue
        image: 751732450123.dkr.ecr.us-east-1.amazonaws.com/catalogue:503
        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: catalogue-configmap
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "300Mi"
            cpu: "200m"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue-configmap
data:
  MONGO_URL: "mongodb://admin1:<roboshop1>@roboshop-dev-docdb.cni2x2uz4mfb.us-east-1.docdb.amazonaws.com:27017/?tls=true&tlsCAFile=global-bundle.pem&retryWrites=false"

---

apiVersion: v1
kind: Service
metadata:
  name: catalogue-svc
spec:
  selector:
    app: catalogue
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
# AutoScaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: catalogue-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment   # This could be any scalable workload
    name: catalogue
  minReplicas: 1     # Minimum number of replicas
  maxReplicas: 10     # Maximum number of replicas
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetCPUUtilizationPercentage: 75   # Target average CPU utilization percentage

